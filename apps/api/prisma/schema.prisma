generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Applicant {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  firstName     String
  lastName      String
  email         String   @unique
  phone         String?
  rightToWorkUk Boolean?
  // REMOVED: roles field
  applications  Application[]
}

model Role {
  id           String            @id @default(cuid())
  name         String            @unique
  applications ApplicationRole[] // CHANGED: now points to ApplicationRole
}

// REMOVED: ApplicantRole model entirely

// NEW: ApplicationRole junction table
model ApplicationRole {
  application   Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  applicationId String
  role          Role        @relation(fields: [roleId], references: [id])
  roleId        String
  
  @@id([applicationId, roleId])
  @@map("ApplicationRole")
}

model Application {
  id             String            @id @default(cuid())
  createdAt      DateTime          @default(now())
  status         ApplicationStatus @default(RECEIVED)
  cvKey          String
  cvOriginalName String?
  notes          String?
  source         String?
  applicant      Applicant         @relation(fields: [applicantId], references: [id])
  applicantId    String
  roles          ApplicationRole[] // NEW: roles now belong to application

  @@index([status, createdAt])
}

enum ApplicationStatus {
  RECEIVED
  REVIEWING
  SHORTLISTED
  REJECTED
  HIRED
}

model AdminUser {
  id             String    @id @default(cuid())
  username       String    @unique
  password       String
  createdAt      DateTime  @default(now())
  
  // Security fields
  failedAttempts Int       @default(0)
  lockedUntil    DateTime?
  
  @@index([username])
}
